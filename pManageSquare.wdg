#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : pManageSquare
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x16e2f8da0156b85d
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  internal_properties : CAAAAAgAAABOnrfgMUgWMgW0CzyqGcDheWTq5yRShKf2RS5P8RJzMHca9Z7QRtSsD/WZpFkBwAVbvRAVOvOVpnDEMQ8fUKz0xs7IPajiRQ==
  type_code : 31
  p_codes :
   -
     code : |1+
      GLOBAL
      	garrCell			is array of 3 by 3 int
      	gnMaxSquare			is int = 9
      	gnNbColumns 		is int = 3
      	
      CONSTANT
      	cnVictory = 1
      	cnDraw = 2
      	cnDefeat = 3
      END
     type : 720896
  procedures :
   -
     name : nCalcCol
     procedure_id : 1649154028780107869
     type_code : 15
     code : |1-
      PROCEDURE nCalcCol(nValue is int)
      
      RESULT ((nValue-1) modulo 3)+1
     type : 458752
   -
     name : nCalcRow
     procedure_id : 1649154028780173405
     type_code : 15
     code : |1-
      PROCEDURE nCalcRow(nValue is int)
      
      RESULT ((nValue-1)/3)+1
     type : 458752
   -
     name : AssignSquare
     procedure_id : 1649154028780238941
     type_code : 15
     code : |1-
      // Syntax:
      //AssignSquare (<nRowNum>, <nColNum>, <nValue>)
      //
      // Parameters:
      // 	nRowNum: Number of the row to assign
      // 	nColNum: Number of the column to assign
      // 	nValue: Value to assign
      // Return value:
      // 	None
      
      PROCEDURE AssignSquare(nRowNum, nColNum, nValue)
      
      garrCell[nColNum][nRowNum]=nValue
     type : 458752
   -
     name : bFullTable
     procedure_id : 1649154028780304477
     type_code : 15
     code : |1-
      // Syntax:
      //[ <Result> = ] bFullTable()
      //
      // Parameters:
      //	None
      // Return value:
      // 	boolean: True if the array is full, False otherwise
      
      PROCEDURE bFullTable()
      
      nSubscript is int
      
      FOR nSubscript = 1 _TO_ gnMaxSquare
      	// The table is incomplete if at least one square is empty	
      	IF garrCell[nCalcCol(nSubscript)][nCalcRow(nSubscript)]=0 THEN
      		// incomplete table
      		RESULT False
      	END
      END
      
      // The table is complete by default
      RESULT True
     type : 458752
   -
     name : nNumEmptySquare
     procedure_id : 1649154028780370013
     type_code : 15
     code : |1-
      // Syntax:
      //[ <Result> = ] nNumEmptySquare()
      //
      // Parameters:
      //	None
      // Return value:
      // 	integer: Value of the first empty square
      
      PROCEDURE nNumEmptySquare()
      
      nSubscript is int
      
      FOR nSubscript = 1 _TO_ gnMaxSquare
      	// Play this square if it is empty
      	IF pManageSquare.garrCell[nCalcCol(nSubscript)][nCalcRow(nSubscript)]=0 THEN
      		RESULT nSubscript
      	END
      END
      
      RESULT 0
     type : 458752
   -
     name : bWon
     procedure_id : 1649154028780435549
     type_code : 15
     code : |1+
      // Syntax:
      // [ <Result> = ] bWin (<tarrSquare>)
      //
      // Parameters:
      // 	tarrSquare: array of squares
      // Return value:
      // 	boolean: True in case of victory
      
      PROCEDURE bWon(tarrSquare)
      
      // Local variables
      i, j	are int
      n		is int
      bEqual	is boolean
      bDiagonal is boolean
      
      // Test the rows:
      FOR i=1 _TO_ gnNbColumns
      	bEqual=True
      	n=tarrSquare[1][i]
      	IF n<>0 THEN
      		FOR j=2 _TO_ gnNbColumns
      			IF n<>tarrSquare[j][i] THEN
      				bEqual=False
      				BREAK
      			END
      		END
      		IF bEqual THEN RESULT True
      	END
      END
      
      // Test the columns:
      FOR i=1 _TO_ gnNbColumns
      	bEqual=True
      	n=tarrSquare[i][1]
      	IF n<>0 THEN
      		FOR j=2 _TO_ gnNbColumns
      			IF n<>tarrSquare[i][j] THEN
      				bEqual=False
      				BREAK
      			END
      		END
      		IF bEqual THEN RESULT True
      	END
      END
      
      // Test the diagonals: Top-Left to Bottom-Right
      IF tarrSquare[1][1]<>0 THEN
      	bDiagonal = True
      	FOR i=2 _TO_ gnNbColumns
      		IF tarrSquare[1][1]<>tarrSquare[i][i] THEN
      			bDiagonal = False
      		END
      	END
      	IF bDiagonal = True THEN RESULT True
      END
      
      // Test the diagonals: Top-Right to Bottom-Left
      IF tarrSquare[1][3]<>0 THEN
      	bDiagonal = True
      	FOR i=2 _TO_ gnNbColumns
      		IF tarrSquare[1][3]<>tarrSquare[i][gnNbColumns-i+1] THEN
      			bDiagonal = False
      		END
      	END
      	IF bDiagonal = True THEN RESULT True
      END
      
      RESULT False
      
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : pGestionCase
resources :
 string_res :
  identifier : 0x105b084e000e1ec0
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
